<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Engine</name>
    </assembly>
    <members>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.BubbleSort(System.Int32[])">
            <summary>Sorts an entire array of type int in non-decreasing order using the bubble sort algorithm.</summary>
            <param name="array">the array to be sorted</param>
            <remarks>Runtime: Omega(n), average(n^2), O(n^2). Memory: in place. Stability: yes.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.BubbleSort(System.IComparable[])">
            <summary>Sorts an entire array of type IComparable in non-decreasing order using the bubble sort algorithm.</summary>
            <param name="array">the array to be sorted</param>
            <remarks>Runtime: Omega(n), average(n^2), O(n^2). Memory: in place. Stability: yes.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.SelectionSort(System.Int32[])">
            <summary>Sorts an entire array of type int in non-decreasing order using the selection sort algoritm.</summary>
            <param name="array">The array to be sorted</param>
            <remarks>Runtime: Omega(n^2), average(n^2), O(n^2). Memory: in place. Stablity: no.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.SelectionSort(System.IComparable[])">
            <summary>
            Sorts an entire array of type IComparable in non-decreasing order using the selection sort algoritm.
            Runtime: Omega(n^2), average(n^2), O(n^2).
            Memory: in place.
            Stablity: no.
            - Seven 03.06.2013
            </summary>
            <param name="array">the array to be sorted</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.InsertionSort(System.Int32[])">
            <summary>Sorts an entire array of type int in non-decreasing order using the insertion sort algorithm.</summary>
            <param name="array">the array to be sorted</param>
            <remarks>Runtime: Omega(n), average(n^2), O(n^2). Memory: in place. Stablity: yes.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.InsertionSort(System.IComparable[])">
            <summary>Sorts an entire array of type IComparable in non-decreasing order using the insertion sort algorithm.</summary>
            <param name="array">the array to be sorted</param>
            <remarks>Runtime: Omega(n), average(n^2), O(n^2). Memory: in place. Stablity: yes.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.QuickSort(System.Int32[])">
            <summary>Sorts an entire array of type int in non-decreasing order using the quick sort algorithm.</summary>
            <param name="array">The array to be sorted.</param>
            <remarks>Runtime: Omega(n*ln(n)), average(n*ln(n)), O(n^2). Memory Space: ln(n). Stablity: no.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.QuickSort(System.IComparable[])">
            <summary>Sorts an entire array of type IComparable in non-decreasing order using the quick sort algorithm.</summary>
            <param name="array">The array to be sorted</param>
            <remarks>Runtime: Omega(n*ln(n)), average(n*ln(n)), O(n^2). Memory: ln(n). Stablity: no.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.MergeSort(System.Int32[])">
            <summary>Sorts up to an array of type int in non-decreasing order using the merge sort algorithm.</summary>
            <param name="array">The array to be sorted</param>
            <remarks>Runtime: Omega(n*ln(n)), average(n*ln(n)), O(n*ln(n)). Memory: n. Stablity: yes.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.MergeSort(System.IComparable[])">
            <summary>Sorts up to an array of type IComparable in non-decreasing order using the merge sort algorithm.</summary>
            <param name="array">The array to be sorted</param>
            <remarks>Runtime: Omega(n*ln(n)), average(n*ln(n)), O(n*ln(n)). Memory: n. Stablity: yes.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.HeapSort(System.Int32[])">
            <summary>Sorts an entire array of type int in non-decreasing order using the heap sort algorithm.</summary>
            <param name="array">The array to be sorted</param>
            <remarks>Runtime: Omega(n*ln(n)), average(n*ln(n)), O(n^2). Memory: in place. Stablity: no.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Algotithms.Sorting.HeapSort(System.IComparable[])">
            <summary>Sorts an entire array of type IComparable in non-decreasing order using the heap sort algorithm.</summary>
            <param name="array">The array to be sorted</param>
            <remarks>Runtime: Omega(n*ln(n)), average(n*ln(n)), O(n^2). Memory: in place. Stablity: no.</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.AvlTree`1">
            <summary>Implements an AVL Tree where the items are sorted by string id values.</summary>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.#ctor">
            <summary>Constructs an AVL Tree.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Get(System.String)">
            <summary>Gets the item with the designated by the string.</summary>
            <param name="id">The string ID to look for.</param>
            <returns>The object with the desired string ID if it exists.</returns>
            <remarks>Runtime: O(ln(n)), Omega(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Get(System.String,SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Standard AVL Tree searching algorithm using recursion.</summary>
            <param name="id">The string ID to look for.</param>
            <param name="avlTree">The AVL Tree node to look in.</param>
            <returns>The object in the AVL Tree with the desired string ID.</returns>
            <remarks>Runtime: O(ln(n)), Omega(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Contains(System.String)">
            <summary>Checks to see if the tree contains a specific key.</summary>
            <param name="id">The id to check for existance.</param>
            <returns>"true" if the key exists; "false" if the key does not exist.</returns>
            <remarks>Runtime: O(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Contains(System.String,SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Checks to see if the tree contains a specific key.</summary>
            <param name="id">The id to check for existance.</param>
            <param name="avlTree">The tree to check for key existance in.</param>
            <returns>"true" if the key exists; "false" if the key does not exist.</returns>
            <remarks>Runtime: O(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Add(`0)">
            <summary>Adds an object to the AVL Tree.</summary>
            <param name="id">The string id that you can use to look and remove up the object.</param>
            <param name="addition">The object to add.</param>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Add(`0,SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Adds an object to the AVL Tree.</summary>
            <param name="addition">The object to add.</param>
            <param name="avlTree">The binary search tree to add to.</param>
            <returns>The resulting tree.</returns>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Remove(System.String)">
            <summary>Removes an object from the AVL Tree.</summary>
            <param name="removal">The string ID of the object to remove.</param>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Remove(System.String,SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Removes an object from the AVL Tree.</summary>
            <param name="removal">The string ID of the object to remove.</param>
            <param name="avlTree">The binary tree to remove from.</param>
            <returns>The resulting tree after the removal.</returns>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.RemoveLeftMost(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode,SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode@)">
            <summary>Removes the left-most child of an AVL Tree node and returns it through the out parameter.</summary>
            <param name="avlTree">The tree to remove the left-most child from.</param>
            <param name="leftMost">The left-most child of this AVL tree.</param>
            <returns>The updated tree with the removal.</returns>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.RemoveRightMost(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode,SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode@)">
            <summary>Removes the right-most child of an AVL Tree node and returns it through the out parameter.</summary>
            <param name="avlTree">The tree to remove the right-most child from.</param>
            <param name="leftMost">The right-most child of this AVL tree.</param>
            <returns>The updated tree with the removal.</returns>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Height(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>This is just a protection against the null valued leaf nodes, which have a height of "-1".</summary>
            <param name="avlTree">The AVL Tree to find the hight of.</param>
            <returns>Returns "-1" if null (leaf) or the height property of the node.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.SetHeight(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Sets the height of a tree based on its children's heights.</summary>
            <param name="avlTree">The tree to have its height adjusted.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.Balance(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Standard balancing algorithm for an AVL Tree.</summary>
            <param name="avlTree">The tree to check the balancing of.</param>
            <returns>The result of the possible balancing.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.SingleRotateRight(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Standard single rotation (to the right) algorithm for an AVL Tree.</summary>
            <param name="avlTree">The tree to single rotate right.</param>
            <returns>The resulting tree.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.SingleRotateLeft(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Standard single rotation (to the left) algorithm for an AVL Tree.</summary>
            <param name="avlTree">The tree to single rotate left.</param>
            <returns>The resulting tree.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.DoubleRotateRight(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Standard double rotation (to the right) algorithm for an AVL Tree.</summary>
            <param name="avlTree">The tree to float rotate right.</param>
            <returns>The resulting tree.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.DoubleRotateLeft(SevenEngine.DataStructures.AvlTree{`0}.AvlTreeNode)">
            <summary>Standard double rotation (to the left) algorithm for an AVL Tree.</summary>
            <param name="avlTree">The tree to float rotate left.</param>
            <returns>The resulting tree.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.AlphabeticalTraversal(SevenEngine.DataStructures.AvlTree{`0}.TraversalFunction)">
            <summary>Allows an alphebetical ordered traversal using a delegate.</summary>
            <param name="traversalFunction">The function to perform per node in the traversal.</param>
            <remarks>Runtime: O(n * traversalFunction).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.ReverseAlphabeticalTraversal(SevenEngine.DataStructures.AvlTree{`0}.TraversalFunction)">
            <summary>Allows a reverse alphabetical ordered using a delegate.</summary>
            <param name="traversalFunction">The function to perform per node in the traversal.</param>
            <remarks>Runtime: O(n * traversalFunction).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.AvlTree`1.ToArray">
            <summary>Puts all the items in the tree into a list by alphabetical order.</summary>
            <returns>The alphabetized list of items.</returns>
            <remarks>Runtime: Theta(n).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.AvlTree`1.Count">
            <summary>Gets the number of elements in the collection.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.AvlTree`1.IsEmpty">
            <summary>Gets whether the binary search tree is empty.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.AvlTree`1.AvlTreeNode">
            <summary>This class just holds the data for each individual node of the tree.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.AvlTree`1.TraversalFunction">
            <summary>A function to be used in a tree traversal.</summary>
            <param name="id">The id of the current node.</param>
            <param name="node">The current node of a traversal.</param>
        </member>
        <member name="T:SevenEngine.DataStructures.AvlTree`1.Lock">
            <summary>Represents a lockable object for multi-threading.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.AvlTree`1.AvlTreeException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayStatic`1">
            <summary>Implements a mutable priority heap with static priorities using an array.</summary>
            <typeparam name="Type">The type of item to be stored in this priority heap.</typeparam>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags. 
            Seven (Zachary Patten) 10-12-13.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.#ctor(System.Int32)">
            <summary>Generates a priority queue with a capacity of the parameter. Runtime O(1).</summary>
            <param name="capacity">The capacity you want this priority queue to have.</param>
            <remarks>Runtime: Theta(capacity).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.Enqueue(`0,System.Int32)">
            <summary>Enqueue an item into the priority queue and let it works its magic.</summary>
            <param name="addition">The item to be added.</param>
            <param name="priority">The priority of the addition. (LARGER PRIORITY -> HIGHER PRIORITY)</param>
            <remarks>Runtime: O(ln(n)), Omega(1), EstAvg(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.Dequeue">
            <summary>Dequeues the item with the highest priority.</summary>
            <returns>The item of the highest priority.</returns>
            <remarks>Runtime: Theta(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.Peek">
            <summary>This lets you peek at the top priority WITHOUT REMOVING it.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.ShiftUp(System.Int32)">
            <summary>Standard priority queue algorithm for up sifting.</summary>
            <param name="index">The index to be up sifted.</param>
            <remarks>Runtime: O(ln(n)), Omega(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.ShiftDown(System.Int32)">
            <summary>Standard priority queue algorithm for sifting down.</summary>
            <param name="index">The index to be down sifted.</param>
            <remarks>Runtime: O(ln(n)), Omega(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.ArraySwap(System.Int32,System.Int32)">
            <summary>Standard array swap method.</summary>
            <param name="indexOne">The first index of the swap.</param>
            <param name="indexTwo">The second index of the swap.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.Clear">
            <summary>Returns this queue to an empty state.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayStatic`1.Traversal(SevenEngine.DataStructures.HeapArrayStatic{`0}.TraversalFunction)">
            <summary>Allows foreach traversal. (WARNING this traversal is not in order)</summary>
            <param name="traversalFunction">The function to perform per node in the traversal.</param>
            <remarks>Runtime: O(n * traversalFunction).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.HeapArrayStatic`1.Capacity">
            <summary>The maximum items the queue can hold.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:SevenEngine.DataStructures.HeapArrayStatic`1.Count" -->
        <member name="P:SevenEngine.DataStructures.HeapArrayStatic`1.IsFull">
            <summary>True if full, false if there is still room.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayStatic`1.HeapArrayLink">
            <summary>This is just a storage class, it stores an entry in the priority heap and its priority.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayStatic`1.TraversalFunction">
            <summary>A function to be used in a tree traversal.</summary>
            <param name="id">The id of the current node.</param>
            <param name="node">The current node of a traversal.</param>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayStatic`1.HeapArrayStaticException">
            <summary>This is used for throwing imutable priority queue exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayDynamic`1">
            <summary>Implements a mutable priority heap with dynamic priorities using an array and a hash table.</summary>
            <typeparam name="Type">The type of item to be stored in this priority heap.</typeparam>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags.
            Seven (Zachary Patten) 10-12-13.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.#ctor(System.Int32)">
            <summary>Generates a priority queue with a capacity of the parameter.</summary>
            <param name="capacity">The capacity you want this priority queue to have.</param>
            <remarks>Runtime: Theta(capacity).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.Enqueue(`0,System.Int32)">
            <summary>Enqueue an item into the priority queue and let it works its magic.</summary>
            <param name="addition">The item to be added.</param>
            <param name="priority">The priority of the addition (LARGER PRIORITY -> HIGHER PRIORITY).</param>
            <remarks>Runtime: O(n), Omega(1), EstAvg(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.Peek">
            <summary>This lets you peek at the top priority WITHOUT REMOVING it.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.Dequeue">
            <summary>Dequeues the item with the highest priority.</summary>
            <returns>The item of the highest priority.</returns>
            <remarks>Runtime: O(n), Omega(ln(n)), EstAvg(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.IncreasePriority(`0,System.Int32)">
            <summary>Increases the priority of an item in the queue.</summary>
            <param name="item">The item to have its priority increased.</param>
            <param name="priority">The ammount to increase the priority by (LARGER INT -> HIGHER PRIORITY).</param>
            <remarks>Runtime: O(n), Omega(1), EstAvg(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.DecreasePriority(`0,System.Int32)">
            <summary>Decreases the priority of an item in the queue.</summary>
            <param name="item">The item to have its priority decreased.</param>
            <param name="priority">The ammount to decrease the priority by (LARGER INT -> HIGHER PRIORITY).</param>
            <remarks>Runtime: O(n), Omega(1), EstAvg(ln(n)).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.ShiftUp(System.Int32)">
            <summary>Standard priority queue algorithm for up sifting.</summary>
            <param name="index">The index to be up sifted.</param>
            <remarks>Runtime: O(ln(n)), Omega(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.ShiftDown(System.Int32)">
            <summary>Standard priority queue algorithm for sifting down.</summary>
            <param name="index">The index to be down sifted.</param>
            <remarks>Runtime: O(ln(n)), Omega(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.ArraySwap(System.Int32,System.Int32)">
            <summary>Standard array swap method.</summary>
            <param name="indexOne">The first index of the swap.</param>
            <param name="indexTwo">The second index of the swap.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.HeapArrayDynamic`1.Traversal(SevenEngine.DataStructures.HeapArrayDynamic{`0}.TraversalFunction)">
            <summary>Allows foreach traversal. (WARNING this traversal is not in order)</summary>
            <param name="traversalFunction">The function to perform per node in the traversal.</param>
            <remarks>Runtime: O(n * traversalFunction).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.HeapArrayDynamic`1.Capacity">
            <summary>The maximum items the queue can hold.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:SevenEngine.DataStructures.HeapArrayDynamic`1.Count" -->
        <member name="P:SevenEngine.DataStructures.HeapArrayDynamic`1.IsFull">
            <summary>True if full, false if there is still room.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayDynamic`1.HeapArrayDynamicLink">
            <summary>This is just a storage class, it stores an entry in the priority heap and its priority.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayDynamic`1.TraversalFunction">
            <summary>A function to be used in a tree traversal.</summary>
            <param name="id">The id of the current node.</param>
            <param name="node">The current node of a traversal.</param>
        </member>
        <member name="T:SevenEngine.DataStructures.HeapArrayDynamic`1.HeapArrayDynamicException">
            <summary>This is used for throwing mutable priority queue exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.List`1">
            <summary>Implements a growing, singularly-linked list data structure.</summary>
            <typeparam name="InterfaceStringId">The type of objects to be placed in the list.</typeparam>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags.
            Seven (Zachary Patten) 10-12-13.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.#ctor">
            <summary>Creates an instance of a stalistck.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.Add(`0)">
            <summary>Adds an item to the list.</summary>
            <param name="id">The string id of the item to add to the list.</param>
            <param name="addition">The item to add to the list.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.Remove(System.String)">
            <summary>Removes an item from the list with the matching string id.</summary>
            <param name="removalId">The string id of the item to remove.</param>
            <remarks>Runtime: O(n).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.RenameEntry(System.String,System.String)">
            <summary>Allows you to rename an entry within this list.</summary>
            <param name="oldName">The id of the list entry to rename.</param>
            <param name="newName">The new id to apply to the node.</param>
            <remarks>Runtime: Theta(n).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.Clear">
            <summary>Resets the list to an empty state. WARNING could cause excessive garbage collection.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.Foreach(SevenEngine.DataStructures.List{`0}.ForeachFunction)">
            <summary>Allows a foreach loop using a delegate.</summary>
            <param name="foreachFunction">The function within a foreach loop.</param>
            <remarks>Runtime: O(n * foreachFunction).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.List`1.ToArray">
            <summary>Converts the list into a standard array.</summary>
            <returns>A standard array of all the items.</returns>
            /// <remarks>Runtime: Theta(n).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.List`1.Count">
            <summary>Returns the number of items in the list.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.List`1.ListNode">
            <summary>This class just holds the data for each individual node of the list.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.List`1.ForeachFunction">
            <summary>A function to be used in a foreach loop.</summary>
            <param name="id">The id of the current node.</param>
            <param name="node">The current node of a foreach loop.</param>
        </member>
        <member name="T:SevenEngine.DataStructures.List`1.ListException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.ListArray`1">
            <summary>Implements a growing list as an array, so there is possible expansions/contractions.</summary>
            <typeparam name="Type">The type of objects to be placed in the list.</typeparam>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags.
            Seven (Zachary Patten) 10-12-13.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.ListArray`1.#ctor(System.Int32)">
            <summary>Creates an instance of a ListArray, and sets it's minimum capacity.</summary>
            <param name="minimumCapacity">The initial and smallest array size allowed by this list.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.ListArray`1.Add(`0)">
            <summary>Adds an item to the end of the list.</summary>
            <param name="addition">The item to be added.</param>
            <remarks>Runtime: O(n), EstAvg(1). </remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.ListArray`1.Remove(System.Int32)">
            <summary>Removes the item at a specific index.</summary>
            <param name="index">The index of the item to be removed.</param>
            <remarks>Runtime: Theta(n - index).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.ListArray`1.Clear">
            <summary>Empties the list back and reduces it back to its original capacity.</summary>
            <remarks>Runtime: O(1). Warning: causes considerable garbage collection.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.ListArray`1.Foreach(SevenEngine.DataStructures.ListArray{`0}.ForeachFunction)">
            <summary>does a function on every item in the list.</summary>
            <param name="foreachFunction">The funtion to perform on every item in the list.</param>
            <remarks>Runtime: O(n * foreachFunction).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.ListArray`1.ToArray">
            <summary>Converts the list array into a standard array.</summary>
            <returns>A standard array of all the elements.</returns>
        </member>
        <member name="P:SevenEngine.DataStructures.ListArray`1.Count">
            <summary>Gets the number of items in the list.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.ListArray`1.CurrentCapacity">
            <summary>Gets the current capacity of the list.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.ListArray`1.MinimumCapacity">
            <summary>Allows you to adjust the minimum capacity of this list.</summary>
            <remarks>Runtime: O(n), Omega(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.ListArray`1.Item(System.Int32)">
            <summary>Look-up and set an indexed item in the list.</summary>
            <param name="index">The index of the item to get or set.</param>
            <returns>The value at the given index.</returns>
        </member>
        <member name="T:SevenEngine.DataStructures.ListArray`1.ForeachFunction">
            <summary>A function to be used in a foreach loop.</summary>
            <param name="node">The current node of a foreach loop.</param>
        </member>
        <member name="T:SevenEngine.DataStructures.ListArray`1.ListArrayException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.#ctor(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>Creates an octree for three dimensional space partitioning.</summary>
            <param name="x">The x coordinate of the center of the octree.</param>
            <param name="y">The y coordinate of the center of the octree.</param>
            <param name="z">The z coordinate of the center of the octree.</param>
            <param name="scale">How far the tree expands along each dimension.</param>
            <param name="branchFactor">The maximum items per octree node before expansion.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.Add(`0)">
            <summary>Adds an item to the Octree.</summary>
            <param name="id">The id associated with the addition.</param>
            <param name="addition">The addition.</param>
            <param name="x">The x coordinate of the addition's location.</param>
            <param name="y">The y coordinate of the addition's location.</param>
            <param name="z">The z coordinate of the addition's location.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.Add(`0,SevenEngine.DataStructures.Octree{`0}.OctreeNode)">
            <summary>Recursively adds an item to the octree and returns the node where the addition was placed
            and adjusts the octree structure as needed.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.Remove(System.String)">
            <summary>Removes an item from the octree by the id that was assigned to it.</summary>
            <param name="id">The string id of the removal that was given to the item when it was added.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.Remove(System.String,SevenEngine.DataStructures.Octree{`0}.OctreeLeaf)">
            <summary>Recursively removes an item from the octree and adjusts the octree structure as needed.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.Move(System.String,System.Single,System.Single,System.Single)">
            <summary>Moves an existing item from one position to another.</summary>
            <param name="id">The string id of the item to be moved.</param>
            <param name="x">The x coordinate of the new position of the item.</param>
            <param name="y">The y coordinate of the new position of the item.</param>
            <param name="z">The z coordinate of the new position of the item.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.GetList(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Gets contents within the octree within a specific axis-aligned bounding rectanglular prism.</summary>
            <param name="xMin">The minimum x coordinate of the bounding rectangle.</param>
            <param name="yMin">The minimum y coordinate of the bounding rectangle.</param>
            <param name="zMin">The minimum z coordinate of the bounding rectangle.</param>
            <param name="xMax">The maximum x coordinate of the bounding rectangle.</param>
            <param name="yMax">The maximum y coordinate of the bounding rectangle.</param>
            <param name="zMax">The maximum z coordinate of the bounding rectangle.</param>
            <returns>A list of the contents within the provided bounding box.</returns>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.GetList(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SevenEngine.DataStructures.List{`0},SevenEngine.DataStructures.Octree{`0}.OctreeNode)">
            <summary>Recursively finds items within a given bounding cube and adds it to the octree.</summary>
            <param name="bounds"></param>
            <param name="contents"></param>
            <param name="octreeNode"></param>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.GetListArray(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Gets contents within the octree within a specific axis-aligned bounding rectanglular prism.</summary>
            <param name="xMin">The minimum x coordinate of the bounding rectangle.</param>
            <param name="yMin">The minimum y coordinate of the bounding rectangle.</param>
            <param name="zMin">The minimum z coordinate of the bounding rectangle.</param>
            <param name="xMax">The maximum x coordinate of the bounding rectangle.</param>
            <param name="yMax">The maximum y coordinate of the bounding rectangle.</param>
            <param name="zMax">The maximum z coordinate of the bounding rectangle.</param>
            <returns>A list of the contents within the provided bounding box.</returns>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.GetListArray(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,SevenEngine.DataStructures.ListArray{`0},SevenEngine.DataStructures.Octree{`0}.OctreeNode)">
            <summary>Recursively finds items within a given bounding cube and adds it to the octree.</summary>
            <param name="bounds"></param>
            <param name="contents"></param>
            <param name="octreeNode"></param>
        </member>
        <member name="T:SevenEngine.DataStructures.Octree`1.OctreeBound">
            <summary>Represents a bounding cube. Includes coordinates of the center 
            and a scale of expansion along each axis.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Octree`1.OctreeNode">
            <summary>Represents a single node of the octree. Includes references both upwards and
            downwards the tree.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.OctreeNode.DetermineChild(System.Single,System.Single,System.Single)">
            <summary>Finds the child index relative to "this" node given x, y, and z coordinates.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Octree`1.OctreeNode.DetermineChildBounds(System.Int32)">
            <summary>Determins the bounds of a child node.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Octree`1.OctreeLeaf">
            <summary>Represents a single node of the octree. Includes references both upwards and
            downwards the tree.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Octree`1.OctreeBranch">
            <summary>Represents a single node of the octree. Includes references both upwards and
            downwards the tree.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Octree`1.OctreeException">
            <summary>This is used for throwing OcTree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Queue`1">
            <summary>Implements First-In-First-Out queue data structure.</summary>
            <typeparam name="InterfaceStringId">The type of objects to be placed in the list.</typeparam>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags.
            Seven (Zachary Patten) 10-12-13.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Queue`1.#ctor">
            <summary>Creates an instance of a queue.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Queue`1.Enqueue(`0)">
            <summary>Adds an item to the back of the queue.</summary>
            <param name="enqueue">The item to add to the queue.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Queue`1.Dequeue">
            <summary>Removes the oldest item in the queue.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Queue`1.Clear">
            <summary>Resets the queue to an empty state.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Queue`1.Foreach(SevenEngine.DataStructures.Queue{`0}.ForeachFunction)">
            <summary>Allows a foreach loop using a delegate.</summary>
            <param name="foreachFunction">The function within a foreach loop.</param>
            <remarks>Runtime: O(n * foreachFunction).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Queue`1.ToArray">
            <summary>Converts the list into a standard array.</summary>
            <returns>A standard array of all the items.</returns>
            /// <remarks>Runtime: Theta(n).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Queue`1.Count">
            <summary>Returns the number of items in the queue.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.Queue`1.QueueNode">
            <summary>This class just holds the data for each individual node of the list.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Queue`1.ForeachFunction">
            <summary>A function to be used in a foreach loop.</summary>
            <param name="id">The id of the current node.</param>
            <param name="node">The current node of a foreach loop.</param>
        </member>
        <member name="T:SevenEngine.DataStructures.Queue`1.QueueException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Stack`1">
            <summary>Implements a First-In-Last-Out stack data structure.</summary>
            <typeparam name="Type">The type of objects to be placed in the stack.</typeparam>
            <remarks>The runtimes of each public member are included in the "remarks" xml tags.
            Seven (Zachary Patten) 10-12-13.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Stack`1.#ctor">
            <summary>Creates an instance of a stack.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Stack`1.Push(`0)">
            <summary>Adds an item to the top of the stack.</summary>
            <param name="addition">The item to add to the stack.</param>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Stack`1.Peek">
            <summary>Returns the most recent addition to the stack.</summary>
            <returns>The most recent addition to the stack.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Stack`1.Pop">
            <summary>Removes and returns the most recent addition to the stack.</summary>
            <returns>The most recent addition to the stack.</returns>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Stack`1.Clear">
            <summary>Clears the stack to an empty state.</summary>
            <remarks>Runtime: O(1). Note: causes considerable garbage collection.</remarks>
        </member>
        <member name="M:SevenEngine.DataStructures.Stack`1.ToArray">
            <summary>Converts the list into a standard array.</summary>
            <returns>A standard array of all the items.</returns>
            /// <remarks>Runtime: Theta(n).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Stack`1.Count">
            <summary>Returns the number of items in the stack.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.Stack`1.StackNode">
            <summary>This class just holds the data for each individual node of the stack.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Stack`1.StackException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.GraphicsSettingsManager">
            <summary>GraphicsSettingsManager is used for ma</summary>
        </member>
        <member name="T:SevenEngine.IGameState">
            <summary>INHERIT ME!</summary>
        </member>
        <member name="T:SevenEngine.Mathematics.Quaternion">
            <summary>Implements a 4-component (x, y, z, and w) quaternion for 3D rotatoins.</summary>
        </member>
        <member name="T:SevenEngine.Mathematics.Quaternion.QuaternionException">
            <summary>This is used for throwing quaternion exceptions only to make debugging faster.</summary>
        </member>
        <member name="F:SevenEngine.Mathematics.Trigonometry.Pi">
            <summary>3.14159265358979</summary>
        </member>
        <member name="F:SevenEngine.Mathematics.Trigonometry.TwoPi">
            <summary>6.28318530717958</summary>
        </member>
        <member name="F:SevenEngine.Mathematics.Trigonometry.HalfPi">
            <summary>1.57079632679489</summary>
        </member>
        <member name="F:SevenEngine.Mathematics.Trigonometry.ThreeHalvesPi">
            <summary>4.71238898038468</summary>
        </member>
        <member name="T:SevenEngine.Physics.InterfaceSolid">
            <summary>Represents everything on a physical level (no graphic data here, just plain old physics).</summary>
        </member>
        <member name="T:SevenEngine.StaticModels.StaticMesh">
            <summary>Represents a small wrapper for static meshes that adds a texture reference, and string id.
            The reason for this wrapper is for possible dismemberment from its StaticModel.</summary>
        </member>
        <member name="T:SevenEngine.StaticModels.StaticMeshInstance">
            <summary>Represents a single mesh that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.StaticModels.StaticMeshInstance.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates an instance of a StaticMesh.</summary>
            <param name="filePath">The file path of the model that the data came from.</param>
            <param name="id">The name associated with this mash when in was created.</param>
            <param name="vertexBufferHandle">The number reference of the vertex buffer on the GPU (default is 0).</param>
            <param name="colorBufferHandle">The number reference of the color buffer on the GPU (default is 0).</param>
            <param name="textureCoordinatesHandle">The number reference of the texture coordinate buffer on the GPU (default is 0).</param>
            <param name="normalBufferHandle">The number reference of the normal buffer on the GPU (default is 0).</param>
            <param name="elementBufferHandle">The number reference of the element buffer on the GPU (default is 0).</param>
            <param name="vertexCount">The number of verteces making up the mesh.</param>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.FilePath">
            <summary>Holds the filepath of the imported file.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.Id">
            <summary>The id associated with this mesh in the "StaticModelManager".</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.VertexBufferHandle">
            <summary>The handle of the vertex buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.ColorBufferHandle">
            <summary>The location of the color buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.TextureCoordinateBufferHandle">
            <summary>The location of the texture coordinate buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.NormalBufferHandle">
            <summary>The location of the normal buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.ElementBufferHandle">
            <summary>The location of the element buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.VertexCount">
            <summary>The number of verteces in this model.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticMeshInstance.OriginalTexture">
            <summary>The original texture that was assigned when the mesh was loaded.</summary>
        </member>
        <member name="T:SevenEngine.StaticModels.StaticModel">
            <summary>Represents a collection of static meshes that all use the same model-view matrix.</summary>
        </member>
        <member name="M:SevenEngine.StaticModels.StaticModel.#ctor">
            <summary>Creates a blank template for a static model (you will have to construct the model yourself).</summary>
        </member>
        <member name="M:SevenEngine.StaticModels.StaticModel.#ctor(System.String,System.String[],System.String[],System.String[])">
            <summary>Creates a static model from the ids provided.</summary>
            <param name="staticModelId">The id to represent this model as.</param>
            <param name="textures">An array of the texture ids for each sub-mesh of this model.</param>
            <param name="meshes">An array of each mesh id for this model.</param>
            <param name="meshNames">An array of mesh names for this specific instanc3e of a static model.</param>
        </member>
        <member name="M:SevenEngine.StaticModels.StaticModel.#ctor(System.String,SevenEngine.DataStructures.List{SevenEngine.StaticModels.StaticMesh})">
            <summary>Creates a static model out of the parameters.</summary>
            <param name="staticModelId">The id of this model for look up purposes.</param>
            <param name="meshes">A list of mesh ids, textures, and buffer references that make up this model.</param>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticModel.Meshes">
            <summary>Gets the list of meshes that make up this model.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticModel.Id">
            <summary>Look-up id for pulling the static model out of the databases.</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticModel.Position">
            <summary>The position vector of this static model (used in rendering transformations).</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticModel.Scale">
            <summary>The scale vector (scale of each axis separately) of this static model (used in rendering transformations).</summary>
        </member>
        <member name="P:SevenEngine.StaticModels.StaticModel.Orientation">
            <summary>Represents the orientation of a static model by a quaternion rotation.</summary>
        </member>
        <member name="T:SevenEngine.PhysicsManager">
            <summary>PhysicsManager is used for physics management (collisions, gravity, destruction, etc).</summary>
        </member>
        <member name="T:SevenEngine.SevenEngineWindow">
            <summary>INHERIT ME!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeInput">
            <summary>Give the input manager a reference to the Keyboard from OpenTK.</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeDisplay">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeSounds">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeTextures">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeFonts">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeModels">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeShaders">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.InitializeStates">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="M:SevenEngine.SevenEngineWindow.Update(System.Double)">
            <summary>OVERRIDE THIS FUNCTION!</summary>
        </member>
        <member name="T:SevenEngine.ShaderManager">
            <summary>ShaderManager is used for shader management (loading, storing, hardware instance controling, disposing, and GPU compilation).</summary>
        </member>
        <member name="M:SevenEngine.ShaderManager.GetVertexShader(System.String)">
            <summary>Get a vertex shader that has been loaded and compiled on the GPU.</summary>
            <param name="shaderId">The name associated with the shader when you loaded it.</param>
            <returns>The shader if it exists.</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.GetFragmentShader(System.String)">
            <summary>Get a fragment shader that has been loaded and compiled on the GPU.</summary>
            <param name="shaderId">The name associated with the shader when you loaded it.</param>
            <returns>The shader if it exists.</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.GetGeometryShader(System.String)">
            <summary>Get a geometry shader that has been loaded and compiled on the GPU.</summary>
            <param name="shaderId">The name associated with the shader when you loaded it.</param>
            <returns>The shader if it exists.</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.GetExtendedGeometryShader(System.String)">
            <summary>Get an extended geometry shader that has been loaded and compiled on the GPU.</summary>
            <param name="shaderId">The name associated with the shader when you loaded it.</param>
            <returns>The shader if it exists.</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.GetShaderProgram(System.String)">
            <summary>Get a shader program that has been loaded and compiled on the GPU.</summary>
            <param name="shaderId">The name associated with the shader when you loaded it.</param>
            <returns>The shader if it exists.</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.LoadVertexShader(System.String,System.String)">
            <summary>Loads a shader file, compiles it on the GPU, and adds it to the database.</summary>
            <param name="shaderId">The name you want to associate with this specific shader so you can use it later.</param>
            <param name="filePath">The file location of the shader file.</param>
            <returns>If the load was successful. (true if successful; false if unsuccessful)</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.LoadFragmentShader(System.String,System.String)">
            <summary>Loads a shader file, compiles it on the GPU, and adds it to the database.</summary>
            <param name="shaderId">The name you want to associate with this specific shader so you can use it later.</param>
            <param name="filePath">The file location of the shader file.</param>
            <returns>If the load was successful. (true if successful; false if unsuccessful)</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.LoadGeometryShader(System.String,System.String)">
            <summary>Loads a shader file, compiles it on the GPU, and adds it to the database.</summary>
            <param name="shaderId">The name you want to associate with this specific shader so you can use it later.</param>
            <param name="filePath">The file location of the shader file.</param>
            <returns>If the load was successful. (true if successful; false if unsuccessful)</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.LoadExtendedGeometryShader(System.String,System.String)">
            <summary>Loads a shader file, compiles it on the GPU, and adds it to the database.</summary>
            <param name="shaderId">The name you want to associate with this specific shader so you can use it later.</param>
            <param name="filePath">The file location of the shader file.</param>
            <returns>If the load was successful. (true if successful; false if unsuccessful)</returns>
        </member>
        <member name="M:SevenEngine.ShaderManager.SetActiveShader(System.String)">
            <summary>Sets the currently active shader program by the name associated with it.</summary>
            <param name="shaderProgramId">The name you associated with this specific shader program when you created it.</param>
            <returns>If the shader selection was successful. (true if success, false if unsuccessful)</returns>
        </member>
        <member name="T:SevenEngine.Shaders.ExtendedGeometryShader">
            <summary>Represents a single extended geometry shader that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.Shaders.ExtendedGeometryShader.#ctor(System.String,System.String,System.Int32)">
            <summary>Creates an instance of a GPU referencing class for an extended geometry shader.</summary>
            <param name="id">The id of this extended geometry shader used for look-up purposes.</param>
            <param name="filePath">The filepath where this shader was loaded from.</param>
            <param name="gpuHandle">The GPU handle or location where its memory starts on VRAM.</param>
        </member>
        <member name="P:SevenEngine.Shaders.ExtendedGeometryShader.FilePath">
            <summary>The file path form which the shader was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.ExtendedGeometryShader.Id">
            <summary>The name associated with this shader when it was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.ExtendedGeometryShader.GpuHandle">
            <summary>The location of the shader program on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.ExtendedGeometryShader.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="T:SevenEngine.Shaders.FragmentShader">
            <summary>Represents a single fragment shader that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.Shaders.FragmentShader.#ctor(System.String,System.String,System.Int32)">
            <summary>Creates an instance of a GPU referencing class for a fragment shader.</summary>
            <param name="id">The id of this fragment shader used for look-up purposes.</param>
            <param name="filePath">The filepath from which this fragment shader was loaded.</param>
            <param name="gpuHandle">The GPU handle or location where the memory starts on VRAM.</param>
        </member>
        <member name="P:SevenEngine.Shaders.FragmentShader.FilePath">
            <summary>The file path form which the shader was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.FragmentShader.Id">
            <summary>The name associated with this shader when it was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.FragmentShader.GpuHandle">
            <summary>The location of the shader program on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.FragmentShader.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="T:SevenEngine.Shaders.GeometryShader">
            <summary>Represents a single geometry shader that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.Shaders.GeometryShader.#ctor(System.String,System.String,System.Int32)">
            <summary>Creates an instance of a GPU referencing class for a geometry shader.</summary>
            <param name="id">The id of this geometry shader used for look-up purposes.</param>
            <param name="filePath">The filepath from which this geometry shader was loaded.</param>
            <param name="gpuHandle">The GPU handle or location where the memory starts on VRAM.</param>
        </member>
        <member name="P:SevenEngine.Shaders.GeometryShader.FilePath">
            <summary>The file path form which the shader was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.GeometryShader.Id">
            <summary>The name associated with this shader when it was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.GeometryShader.GpuHandle">
            <summary>The location of the shader program on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.GeometryShader.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="T:SevenEngine.Shaders.ShaderProgram">
            <summary>Represents a single shader program that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.Shaders.ShaderProgram.#ctor(System.String,System.Int32)">
            <summary>Creates an instance of a GPU referencing class for a shader program.</summary>
            <param name="id">The id of this geometry shader used for look-up purposes.</param>
            <param name="gpuHandle">The GPU handle or location where the memory starts on VRAM.</param>
        </member>
        <member name="P:SevenEngine.Shaders.ShaderProgram.Id">
            <summary>The file path form which the shader was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.ShaderProgram.GpuHandle">
            <summary>The location of the shader program on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.ShaderProgram.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="T:SevenEngine.Shaders.ShaderProgram.ShaderException">
            <summary>This is used for throwing shader exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.Shaders.VertexShader">
            <summary>Represents a single vertex shader that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.Shaders.VertexShader.#ctor(System.String,System.String,System.Int32)">
            <summary>Creates an instance of a GPU referencing class for a vertex shader.</summary>
            <param name="id">The id of this vertex shader used for look-up purposes.</param>
            <param name="filePath">The filepath from which this vertex shader was loaded.</param>
            <param name="gpuHandle">The GPU handle or location where the memory starts on VRAM.</param>
        </member>
        <member name="P:SevenEngine.Shaders.VertexShader.FilePath">
            <summary>The file path form which the shader was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.VertexShader.Id">
            <summary>The name associated with this shader when it was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.VertexShader.GpuHandle">
            <summary>The location of the shader program on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Shaders.VertexShader.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="T:SevenEngine.FilePath">
            <summary>Will generate filepaths in a cross platform manor.</summary>
        </member>
        <member name="M:SevenEngine.SkyBox.GenerateVertexBuffer">
            <summary>Generates the vertex buffer that all sprites will use.</summary>
        </member>
        <member name="M:SevenEngine.SkyBox.GenerateTextureCoordinateBuffer">
            <summary>Generates the vertex buffer that all sprites will use.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.VertexCount">
            <summary>Returns 30, because skyboxes always have 30 verteces.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.GpuVertexBufferHandle">
            <summary>The handle to the memory of the texture buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.GPUTextureCoordinateBufferHandle">
            <summary>The handle to the memory of the texture buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Position">
            <summary>The center of this skybox. YOU PROBABLY WANT THE SKYBOXES POSITION TO FOLLOW THE CAMERA!!!</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Scale">
            <summary>The scale of the skybox. YOU MAY WANT TO SET THE SCALE TO BE 1/2 OF THE FAR CLIP PLANE FOR EACH DIMENSION.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Top">
            <summary>The texture being applied to the top of the skybox.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Right">
            <summary>The texture being applied to the right of the skybox.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Left">
            <summary>The texture being applied to the left of the skybox.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Back">
            <summary>The texture being applied to the back of the skybox.</summary>
        </member>
        <member name="P:SevenEngine.SkyBox.Front">
            <summary>The texture being applied to the front fo the skybox.</summary>
        </member>
        <member name="P:SevenEngine.Camera.FieldOfView">
            <summary>The field of view applied to the projection matrix during rendering transformations.</summary>
        </member>
        <member name="P:SevenEngine.Camera.PositionSpeed">
            <summary>The speed at which the camera's position moves (camera movement sensitivity).</summary>
        </member>
        <member name="F:SevenEngine.DataStructures.HashTable`2._tableSizes">
            <summary>A set of allowable table sizes, all of which are prime.</summary>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.IsPrime(System.Int32)">
            <summary>Determines whether a number is prime or not.</summary>
            <param name="candidate">The number to determine prime status.</param>
            <returns>True if prime, false if not prime.</returns>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.GetNextPrime(System.Int32)">
            <summary>Gets the first prime number greater than or equal to the parameter.</summary>
            <param name="minimum">The minimum bound on a prime number request (return value >= minimum). 
            If this value is negative or too large for Int32 support an exception is thrown.</param>
            <returns>The first prime number greater than or equal to the parameter.</returns>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.#ctor(System.Int32)">
            <summary>Creates a hash table of the provided size.</summary>
            <param name="capacity">The maximum size of the table.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.ComputeHash(System.Object,System.Int32,System.UInt32@,System.UInt32@)">
            <summary>Computes the hash function:  H(key, i) = h1(key) + i*h2(key, hashSize).</summary>
            <param name="key">The object computing the hash code for.</param>
            <param name="hashsize">The hash size.</param>
            <param name="seed">"h1(key)" from the function: H(key, i) = h1(key) + i*h2(key, hashSize).</param>
            <param name="incr">"h2(key, hashSiz.)" from the function: H(key, i) = h1(key) + i*h2(key, hashSize).</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.Clone">
            <summary>Creates a copy of this hash table.</summary>
            <returns>A copy of the current hash table.</returns>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.CopyTo(System.Array,System.Int32)">
            <summary>Copies the values in this hash table into an array (note that this is only values, not keys).</summary>
            <param name="array">The array to copy the values to.</param>
            <param name="arrayIndex">The startig index of the copy.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.rehash(System.Int32)">
            <summary>Re-hashes all entries in a new bucket array. Called occasionally due to large occupancy or when exanding.</summary>
            <param name="newsize">The size of the new bucket array.</param>
        </member>
        <member name="M:SevenEngine.DataStructures.Hashtable2.Add(System.Object,System.Object)">
            <summary>Adds an entry with the given key and value to this hashtable.</summary>
            <param name="key">The left value of the entry.</param>
            <param name="value">The right value of the entry.</param>
        </member>
        <member name="P:SevenEngine.DataStructures.Hashtable2.Count">
            <summary>Returns the number of entries in this table.</summary>
        </member>
        <member name="P:SevenEngine.DataStructures.Hashtable2.Item(System.Object)">
            <summary>Standard hash table indexing by key.</summary>
            <param name="key">The "index" at which to store a value.</param>
            <returns>The value at the index key </returns>
        </member>
        <member name="T:SevenEngine.DataStructures.Hashtable2.HashTableException">
            <summary>This is used for throwing imutable priority queue exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.DataStructures.Link2`2">
            <summary>Creates a link between two objects. (you may recognize this as a tuple)</summary>
            <typeparam name="LeftItem">The type of the left item to be linked.</typeparam>
            <typeparam name="RightItem">The type of the right item to be linked.</typeparam>
        </member>
        <member name="M:SevenEngine.DataStructures.Link2`2.#ctor(`0,`1)">
            <summary>Creates a link between two objects.</summary>
            <param name="left">The left item to be linked.</param>
            <param name="right">The right item to be linked.</param>
            <remarks>Runtime: O(1). Space: Theta(2).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Link2`2.Left">
            <summary>The left item in the link.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Link2`2.Right">
            <summary>The right item in the link.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.DataStructures.Link3`3">
            <summary>Creates a link between two objects. (you may recognize this as a tuple)</summary>
            <typeparam name="LeftItem">The type of the left item to be linked.</typeparam>
            <typeparam name="MiddleItem">The type of the middle item to be linked.</typeparam>
            <typeparam name="RightItem">The type of the right item to be linked.</typeparam>
        </member>
        <member name="M:SevenEngine.DataStructures.Link3`3.#ctor(`0,`1,`2)">
            <summary>Creates a link between two objects.</summary>
            <param name="left">The left item to be linked.</param>
            <param name="right">The right item to be linked.</param>
            <remarks>Runtime: O(1). Space: Theta(2).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Link3`3.Left">
            <summary>The left item in the link.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Link3`3.Middle">
            <summary>The middle item of the link.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="P:SevenEngine.DataStructures.Link3`3.Right">
            <summary>The right item in the link.</summary>
            <remarks>Runtime: O(1).</remarks>
        </member>
        <member name="T:SevenEngine.Mathematics.Matrix">
            <summary>Implements a 3x3 rotational matrix.</summary>
        </member>
        <member name="M:SevenEngine.Mathematics.Matrix.FactoryRotationX(System.Single)">
            <param name="angle">Angle of rotation in radians.</param>
        </member>
        <member name="M:SevenEngine.Mathematics.Matrix.FactoryRotationY(System.Single)">
            <param name="angle">Angle of rotation in radians.</param>
        </member>
        <member name="M:SevenEngine.Mathematics.Matrix.FactoryRotationZ(System.Single)">
            <param name="angle">Angle of rotation in radians.</param>
        </member>
        <member name="M:SevenEngine.Mathematics.Matrix.FactoryRotationXthenYthenZ(System.Single,System.Single,System.Single)">
            <param name="angleX">Angle about the X-axis in radians.</param>
            <param name="angleY">Angle about the Y-axis in radians.</param>
            <param name="angleZ">Angle about the Z-axis in radians.</param>
        </member>
        <member name="M:SevenEngine.Mathematics.Matrix.FactoryRotationZthenYthenX(System.Single,System.Single,System.Single)">
            <param name="angleX">Angle about the X-axis in radians.</param>
            <param name="angleY">Angle about the Y-axis in radians.</param>
            <param name="angleZ">Angle about the Z-axis in radians.</param>
        </member>
        <member name="M:SevenEngine.Mathematics.Matrix.FactoryShear(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <param name="shearXbyY">The shear along the X-axis in the Y-direction.</param>
            <param name="shearXbyZ">The shear along the X-axis in the Z-direction.</param>
            <param name="shearYbyX">The shear along the Y-axis in the X-direction.</param>
            <param name="shearYbyZ">The shear along the Y-axis in the Z-direction.</param>
            <param name="shearZbyX">The shear along the Z-axis in the X-direction.</param>
            <param name="shearZbyY">The shear along the Z-axis in the Y-direction.</param>
        </member>
        <member name="T:SevenEngine.Mathematics.Matrix.MatrixException">
            <summary>This is used for throwing matrix exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.SpriteManager">
            <summary>SpriteManager is used for sprite management (loading, storing, hardware instance controling, and disposing).</summary>
        </member>
        <member name="T:SevenEngine.StaticModelManager">
            <summary>StaticModelManager is used for rigid-body model management (loading, storing, hardware instance controling, and disposing).</summary>
        </member>
        <member name="M:SevenEngine.StaticModelManager.GetMesh(System.String)">
            <summary>USE "GetModel" UNLESS YOU KNOW WHAT YOU ARE DOING!!!</summary>
            <param name="staticMeshId">The name id of the mesh you wish to obtain.</param>
            <returns>The desired static mesh if it exists.</returns>
        </member>
        <member name="M:SevenEngine.StaticModelManager.GetModel(System.String)">
            <summary>Gets a static model you loaded that you have loaded.</summary>
            <param name="staticModelId">The name id of the model you wish to obtain.</param>
            <returns>The desired static model if it exists.</returns>
        </member>
        <member name="M:SevenEngine.StaticModelManager.LoadMesh(System.String,System.String)">
            <summary>Loads an 3d model file. NOTE that only obj files are currently supported.</summary>
            <param name="textureManager">The texture manager so that the mesh can automatically texture itself.</param>
            <param name="staticMeshId">The key used to look up this mesh in the database.</param>
            <param name="filePath">The filepath of the model file you are attempting to load.</param>
        </member>
        <member name="M:SevenEngine.StaticModelManager.LoadSevenModel(System.String,System.String)">
            <summary>Loads an 3d model file. NOTE that only obj files are currently supported.</summary>
            <param name="textureManager">The texture manager so that the mesh can automatically texture itself.</param>
            <param name="staticMeshId">The key used to look up this mesh in the database.</param>
            <param name="filePath">The filepath of the model file you are attempting to load.</param>
        </member>
        <member name="M:SevenEngine.StaticModelManager.LoadSevenModelFromDisk(System.String,System.String)">
            <summary>DONT USE THIS FUNCTION!!! This is an experimental file type I may use in the future.</summary>
        </member>
        <member name="P:SevenEngine.StaticModelManager.MeshCount">
            <summary>The number of meshes currently loaded onto the graphics card.</summary>
        </member>
        <member name="P:SevenEngine.StaticModelManager.ModelCount">
            <summary>The number of models currently loaded onto the graphics card.</summary>
        </member>
        <member name="T:SevenEngine.StaticModelManager.StaticModelManagerException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.Mathematics.Vertex">
            <summary>Represents a single vertex with (x, y, z) positions, (x, y, z) normals,
            (u, v) texture coordinates, and (r, g, b, a) colors.</summary>
        </member>
        <member name="P:SevenEngine.Mathematics.Vertex.Position">
            <summary>The position (X, Y, Z) of the vertex.</summary>
        </member>
        <member name="P:SevenEngine.Mathematics.Vertex.Normal">
            <summary>The normal (X, Y, Z) of the vertex.</summary>
        </member>
        <member name="P:SevenEngine.Mathematics.Vertex.TextureCoordinates">
            <summary>The texture coordinates (u, v) of the vertex.</summary>
        </member>
        <member name="P:SevenEngine.Mathematics.Vertex.Color">
            <summary>The color of the vertex (RBG).</summary>
        </member>
        <member name="T:SevenEngine.Output">
            <summary>Utility for the engine. Prints important tasks and errors without crashing the entire game.</summary>
        </member>
        <member name="F:SevenEngine.Output._indent">
            <summary>The current indention level of writing output.</summary>
        </member>
        <member name="M:SevenEngine.Output.IncreaseIndent">
            <summary>Increases the number of spaces before writing by 2.</summary>
        </member>
        <member name="M:SevenEngine.Output.DecreaseIndent">
            <summary>Decreases the number of spaces before writing by 2.</summary>
        </member>
        <member name="M:SevenEngine.Output.ClearIndent">
            <summary>Clears indention level so no spaces will show before writing.</summary>
        </member>
        <member name="M:SevenEngine.Output.WriteLine(System.String)">
            <summary>Writes a message to the console. Places spaces before the output equal to the current indention level.</summary>
            <param name="output">The string desired to write.</param>
        </member>
        <member name="M:SevenEngine.Output.Write(System.String)">
            <summary>Writes a message to the console. Places spaces before the output equal to the current indention level.</summary>
            <param name="output">The string desired to write.</param>
        </member>
        <member name="T:SevenEngine.TextManager">
            <summary>TextManager is used for fonts management (loading, storing, hardware instance controling, and disposing). </summary>
        </member>
        <member name="M:SevenEngine.TextManager.GetFont(System.String)">
            <summary>Pulls out a font from the database.</summary>
            <param name="font">The name associated with this font when you loaded it in.</param>
            <returns>The font associated with the string id.</returns>
        </member>
        <member name="P:SevenEngine.TextManager.Count">
            <summary>The number of fonts currently loaded onto the graphics card.</summary>
        </member>
        <member name="T:SevenEngine.TextManager.TextManagerException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="M:SevenEngine.Texts.CharacterSprite.#ctor(SevenEngine.Imaging.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates an instance of a sprite.</summary>
            <param name="texture">The texture to have this sprite mapped to.</param>
            <param name="textureMappings">The texture mappings for this sprite.</param>
        </member>
        <member name="M:SevenEngine.Texts.CharacterSprite.GenerateVertexBuffer(System.Single[])">
            <summary>Generates the vertex buffer that all character sprites will use.</summary>
        </member>
        <member name="M:SevenEngine.Texts.CharacterSprite.GenerateTextureCoordinateBuffer(System.Single[])">
            <summary>Generates the texture coordinate buffer that character sprite will default to.</summary>
        </member>
        <member name="P:SevenEngine.Texts.CharacterSprite.GpuVertexBufferHandle">
            <summary>The handle to the memory of the texture buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Texts.CharacterSprite.GPUTextureCoordinateBufferHandle">
            <summary>The handle to the memory of the texture buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Texts.CharacterSprite.VertexCount">
            <summary>Returns 6, because character sprites always have 6 verteces.</summary>
        </member>
        <member name="P:SevenEngine.Texts.CharacterSprite.Texture">
            <summary>Get and set the texture the sprite is mapping to.</summary>
        </member>
        <member name="T:SevenEngine.Imaging.Color">
            <summary>Represents a single color by RGBA values.</summary>
        </member>
        <member name="M:SevenEngine.Imaging.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates an instance of a color using RGBA color values.</summary>
            <param name="red">The ammount of red (0-255).</param>
            <param name="green">The ammount of green (0-255).</param>
            <param name="blue">The ammount of blue (0-255).</param>
            <param name="alpha">The alpha value.</param>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Black">
            <summary>Hex: 0x000000.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.White">
            <summary>Hex: 0xffffff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Blue">
            <summary>Hex: 0x0000ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Green">
            <summary>Hex: 0x00ff00.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Red">
            <summary>Hex: 0xff0000.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Cyan">
            <summary>Hex: 0x00ffff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Magenta">
            <summary>Hex: 0xff00ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Yellow">
            <summary>Hex: 0xffff00.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.AliceBlue">
            <summary>Hex: 0xf0f8ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.AntiqueWhite">
            <summary>Hex: 0xfaebd7.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Aqua">
            <summary>Hex: 0x00ffff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Aquamarine">
            <summary>Hex: 0x7fffd4.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Azure">
            <summary>Hex: 0xf0ffff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Beige">
            <summary>Hex: 0xf5f5dc.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Bisque">
            <summary>Hex: 0xffe4c4.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.BlanchedAlmond">
            <summary>Hex: 0xffebcd.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.BlueViolet">
            <summary>Hex: 0x8a2be2.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Brown">
            <summary>Hex: 0xa52a2a.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Burlywood">
            <summary>Hex: 0xdeb887.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.CadetBlue">
            <summary>Hex: 0x5f9ea0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Chartreuse">
            <summary>Hex: 0x7fff00.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Chocolate">
            <summary>Hex: 0xd2691e.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Coral">
            <summary>Hex: 0xff7f50.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.CornflowerBlue">
            <summary>Hex: 0x6495ed.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Cornsilk">
            <summary>Hex: 0xfff8dc.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkBlue">
            <summary>Hex: 0x00008b.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkCyan">
            <summary>Hex: 0x008b8b.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkGoldenrod">
            <summary>Hex: 0xb8860b.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkGray">
            <summary>Hex: 0xa9a9a9.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkGreen">
            <summary>Hex: 0x006400.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkKhaki">
            <summary>Hex: 0xbdb76b.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkMagenta">
            <summary>Hex: 0x8b008b.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkOliveGreen">
            <summary>Hex: 0x556b2f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkOrange">
            <summary>Hex: 0xff8c00.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkOrchid">
            <summary>Hex: 0x9932cc.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkRed">
            <summary>Hex: 0x8b0000.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkSalmon">
            <summary>Hex: 0xe9967a.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkSeaGreen">
            <summary>Hex: 0x8fbc8f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkSlateBlue">
            <summary>Hex: 0x483d8b.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkSlateGray">
            <summary>Hex: 0x2f4f4f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkTurquoise">
            <summary>Hex: 0x00ced1.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DarkViolet">
            <summary>Hex: 0x9400d3.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DeepPink">
            <summary>Hex: 0xff1493.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DeepSkyBlue">
            <summary>Hex: 0x00bfff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DimGray">
            <summary>Hex: 0x696969.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DodgerBlue">
            <summary>Hex: 0x1e90ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Firebrick">
            <summary>Hex: 0xb22222.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.FloralWhite">
            <summary>Hex: 0xfffaf0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.ForestGreen">
            <summary>Hex: 0x228b22.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Fuschia">
            <summary>Hex: 0xff00ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Gainsboro">
            <summary>Hex: 0xdcdcdc.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.GhostWhite">
            <summary>Hex: 0xf8f8ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Gold">
            <summary>Hex: 0xffd700.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Goldenrod">
            <summary>Hex: 0xdaa520.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Gray">
            <summary>Hex: 0x808080.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.GreenYellow">
            <summary>Hex: 0xadff2f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Honeydew">
            <summary>Hex: 0xf0fff0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.HotPink">
            <summary>Hex: 0xff69b4.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.IndianRed">
            <summary>Hex: 0xcd5c5c.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Ivory">
            <summary>Hex: 0xfffff0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Khaki">
            <summary>Hex: 0xf0e68c.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Lavender">
            <summary>Hex: 0xe6e6fa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LavenderBlush">
            <summary>Hex: 0xfff0f5.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LawnGreen">
            <summary>Hex: 0x7cfc00.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LemonChiffon">
            <summary>Hex: 0xfffacd.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightBlue">
            <summary>Hex: 0xadd8e6.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightCoral">
            <summary>Hex: 0xf08080.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightCyan">
            <summary>Hex: 0xe0ffff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightGoldenrod">
            <summary>Hex: 0xeedd82.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightGoldenrodYellow">
            <summary>Hex: 0xfafad2.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightGray">
            <summary>Hex: 0xd3d3d3.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightGreen">
            <summary>Hex: 0x90ee90.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightPink">
            <summary>Hex: 0xffb6c1.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightSalmon">
            <summary>Hex: 0xffa07a.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightSeaGreen">
            <summary>Hex: 0x20b2aa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightSkyBlue">
            <summary>Hex: 0x87cefa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightSlateBlue">
            <summary>Hex: 0x8470ff.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightSlateGray">
            <summary>Hex: 0x778899.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightSteelBlue">
            <summary>Hex: 0xb0c4de.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LightYellow">
            <summary>Hex: 0xffffe0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Lime">
            <summary>Hex: 0x00ff00.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.LimeGreen">
            <summary>Hex: 0x32cd32.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Linen">
            <summary>Hex: 0xfaf0e6.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Maroon">
            <summary>Hex: 0x800000.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumAquamarine">
            <summary>Hex: 0x66cdaa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumBlue">
            <summary>Hex: 0x0000cd.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumOrchid">
            <summary>Hex: 0xba55d3.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumPurple">
            <summary>Hex: 0x9370db.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumSeaGreen">
            <summary>Hex: 0x3cb371.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumSlateBlue">
            <summary>Hex: 0x7b68ee.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumSpringGreen">
            <summary>Hex: 0x00fa9a.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumTurquoise">
            <summary>Hex: 0x48d1cc.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MediumVioletRed">
            <summary>Hex: 0xc71585.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MidnightBlue">
            <summary>Hex: 0x191970.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MintCream">
            <summary>Hex: 0xf5fffa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.MistyRose">
            <summary>Hex: 0xe1e4e1.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Moccasin">
            <summary>Hex: 0xffe4b5.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.NavajoWhite">
            <summary>Hex: 0xffdead.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Navy">
            <summary>Hex: 0x000080.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.OldLace">
            <summary>Hex: 0xfdf5e6.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Olive">
            <summary>Hex: 0x808000.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.OliveDrab">
            <summary>Hex: 0x6b8e23.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Orange">
            <summary>Hex: 0xffa500.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.OrangeRed">
            <summary>Hex: 0xff4500.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Orchid">
            <summary>Hex: 0xda70d6.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PaleGoldenrod">
            <summary>Hex: 0xeee8aa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PaleGreen">
            <summary>Hex: 0x98fb98.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PaleTurquoise">
            <summary>Hex: 0xafeeee.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PaleVioletRed">
            <summary>Hex: 0xdb7093.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PapayaWhip">
            <summary>Hex: 0xffefd5.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PeachPuff">
            <summary>Hex: 0xffdab9.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Peru">
            <summary>Hex: 0xcd853f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Pink">
            <summary>Hex: 0xffc0cb.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Plum">
            <summary>Hex: 0xdda0dd.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.PowderBlue">
            <summary>Hex: 0xb0e0e6.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Purple">
            <summary>Hex: 0x800080.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.RosyBrown">
            <summary>Hex: 0xbc8f8f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.RoyalBlue">
            <summary>Hex: 0x4169e1.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SaddleBrown">
            <summary>Hex: 0x8b4513.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Salmon">
            <summary>Hex: 0xfa8072.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SandyBrown">
            <summary>Hex: 0xf4a460.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SeaGreen">
            <summary>Hex: 0x2e8b57.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Seashell">
            <summary>Hex: 0xfff5ee.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Sienna">
            <summary>Hex: 0xa0522d.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Silver">
            <summary>Hex: 0xc0c0c0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SkyBlue">
            <summary>Hex: 0x87ceeb.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SlateBlue">
            <summary>Hex: 0x6a5acd.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SlateGray">
            <summary>Hex: 0x708090.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Snow">
            <summary>Hex: 0xfffafa.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SpringGreen">
            <summary>Hex: 0x00ff7f.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.SteelBlue">
            <summary>Hex: 0x4682b4.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Tan">
            <summary>Hex: 0xd2b48c.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Teal">
            <summary>Hex: 0x008080.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Thistle">
            <summary>Hex: 0xd8bfd8.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Tomato">
            <summary>Hex: 0xff6347.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Turquoise">
            <summary>Hex: 0x40e0d0.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Violet">
            <summary>Hex: 0xee82ee.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.VioletRed">
            <summary>Hex: 0xd02090.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.Wheat">
            <summary>Hex: 0xf5deb3.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.WhiteSmoke">
            <summary>Hex: 0xf5f5f5.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.YellowGreen">
            <summary>Hex: 0x9acd32.</summary>
        </member>
        <member name="F:SevenEngine.Imaging.Color.DEFAULT">
            <summary>YOU CAN SET A DEFAULT COLOR HERE IF YOU WANT TO!!!
            I personally like Teal, so it is Teal. :)</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Color.R">
            <summary>The ammount of red (0-255).</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Color.G">
            <summary>The ammount of green (0-255).</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Color.B">
            <summary>The ammount of blue (0-255).</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Color.A">
            <summary>The alpha value (0-255).</summary>
        </member>
        <member name="T:SevenEngine.InputManager">
            <summary>InputManager is used for input management (keyboard and mouse).</summary>
        </member>
        <member name="M:SevenEngine.InputManager.InitializeKeyboard(OpenTK.Input.KeyboardDevice)">
            <summary>This initializes the reference to OpenTK's keyboard.</summary>
            <param name="keyboardDevice">Reference to OpenTK's KeyboardDevice class within their GameWindow class.</param>
        </member>
        <member name="M:SevenEngine.InputManager.InitializeMouse(OpenTK.Input.MouseDevice)">
            <summary>This initializes the reference to OpenTK's mouse.</summary>
            <param name="mouseDevice">Reference to OpenTK's MouseDevice class within their GameWindow class.</param>
        </member>
        <member name="M:SevenEngine.InputManager.Update">
            <summary>Update the input states.</summary>
        </member>
        <member name="P:SevenEngine.InputManager.Keyboard">
            <summary>Gets a reference to the keyboard device to check inputs.</summary>
        </member>
        <member name="P:SevenEngine.InputManager.Mouse">
            <summary>Gets a reference to the mouse device to check inputs.</summary>
        </member>
        <member name="T:SevenEngine.Input.Keyboard">
            <summary>Manages keyboard input using a state system consisting of two states.</summary>
        </member>
        <member name="M:SevenEngine.Input.Keyboard.#ctor(OpenTK.Input.KeyboardDevice)">
            <summary>This initializes the reference to OpenTK's keyboard.</summary>
            <param name="keyboardDevice">Reference to OpenTK's KeyboardDevice class within their GameWindow class.</param>
        </member>
        <member name="M:SevenEngine.Input.Keyboard.Update">
            <summary>Update the input states.</summary>
        </member>
        <member name="T:SevenEngine.Input.Mouse">
            <summary>Manages mouse input using a state system consisting of two states.</summary>
        </member>
        <member name="M:SevenEngine.Input.Mouse.#ctor(OpenTK.Input.MouseDevice)">
            <summary>Initializes this mouse object with a pointer to the OpenTK mouse object.</summary>
            <param name="mouse">The reference to the OpenTK mouse object.</param>
        </member>
        <member name="P:SevenEngine.Input.Mouse.deltaX">
            <summary>(ONLY CALL THIS ONCE PER INOUT HANDLING!!!) Gets the current delta X and updates the mouse position</summary>
        </member>
        <member name="P:SevenEngine.Input.Mouse.deltaY">
            <summary>(ONLY CALL THIS ONCE PER INOUT HANDLING!!!) Gets the current delta Y and updates the mouse position</summary>
        </member>
        <member name="T:SevenEngine.Mathematics.Point.PointException">
            <summary>This is used for throwing vector exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.PreciseTimer">
            <summary>Utility for the engine. Gets the alapsed time to be passed to the "Update()" functions of state or game objects.</summary>
        </member>
        <member name="T:SevenEngine.Renderer">
            <summary>Utility for the engine. Handles ALL rendering. It is good to handle this in one class because vast optimizations can be handled here.</summary>
        </member>
        <member name="M:SevenEngine.Renderer.DrawTriangles(System.Single[],System.Single[],System.Single[],SevenEngine.Imaging.Texture)">
            <summary>Draws triangles from provided float arrays.</summary>
            <param name="verteces">The list of vertex positions (x, y, z) to draw.</param>
            <param name="colors">The list of vertex colors (r, g, b, a) to draw.</param>
            <param name="textureCoordinates">The list of vertex texture mappings (u, v) to draw.</param>
            <param name="texture">The parameter this drawing will be mapped to.</param>
        </member>
        <member name="M:SevenEngine.Renderer.RenderText(System.String,System.Single,System.Single,System.Single,System.Single,SevenEngine.Imaging.Color)">
            <summary>Renders text using screen cartesian coordinates and the current Font property.</summary>
            <param name="message">The message to be rendered.</param>
            <param name="x">The leftmost X value to start rendering the text from.</param>
            <param name="y">The lowermost Y value to start rendering the text from.</param>
            <param name="scale">The size relative to the image provided font file.</param>
            <param name="rotation">The rotation about the Z axis IN RADIANS.</param>
            <param name="color">The color you wish the text to be (NOT YET SUPPORTED, I MESSED UP. IM WORKING ON IT).</param>
        </member>
        <member name="M:SevenEngine.Renderer.DrawStaticModel(SevenEngine.StaticModels.StaticModel)">
            <summary>Renders a single static model using "GL.DrawArrays()".</summary>
            <param name="staticModel">The mesh to be rendered.</param>
        </member>
        <member name="P:SevenEngine.Renderer.DefaultShaderProgram">
            <summary>The default shader that will be used unless the item has a shader override.</summary>
        </member>
        <member name="P:SevenEngine.Renderer.Font">
            <summary>The current font that will be used when rendering text.</summary>
        </member>
        <member name="T:SevenEngine.Renderer.RendererException">
            <summary>This is used for throwing rendering exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.AudioManager">
            <summary>SoundManager is used for audio management (loading, storing, hardware instance controling, and disposing).</summary>
        </member>
        <member name="T:SevenEngine.AudioManager.AudioManagerException">
            <summary>This is used for throwing AVL Tree exceptions only to make debugging faster.</summary>
        </member>
        <member name="T:SevenEngine.Imaging.Sprite">
            <summary>Represents a single image with world transformation values.</summary>
        </member>
        <member name="M:SevenEngine.Imaging.Sprite.#ctor(SevenEngine.Imaging.Texture)">
            <summary>Creates an instance of a sprite.</summary>
            <param name="texture">The texture to have this sprite mapped to.</param>
        </member>
        <member name="M:SevenEngine.Imaging.Sprite.#ctor(SevenEngine.Imaging.Texture,System.Single[])">
            <summary>Creates an instance of a sprite.</summary>
            <param name="texture">The texture to have this sprite mapped to.</param>
            <param name="textureMappings">The texture mappings for this sprite.</param>
        </member>
        <member name="M:SevenEngine.Imaging.Sprite.GenerateVertexBuffer(System.Single[])">
            <summary>Generates the vertex buffer that all sprites will use.</summary>
        </member>
        <member name="M:SevenEngine.Imaging.Sprite.GenerateTextureCoordinateBuffer(System.Single[])">
            <summary>Generates the texture coordinate buffer that sprite will default to.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.GpuVertexBufferHandle">
            <summary>The handle to the memory of the texture buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.GPUTextureCoordinateBufferHandle">
            <summary>The handle to the memory of the texture buffer on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.VertexCount">
            <summary>Returns 6, because sprites always have 6 verteces.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.Position">
            <summary>Get and set the position of the sprite.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.Scale">
            <summary>Get and set the size of the sprite.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.Rotation">
            <summary>Get and set the rotation angle of the sprite.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Sprite.Texture">
            <summary>Get and set the texture the sprite is mapping to.</summary>
        </member>
        <member name="T:SevenEngine.StateManager">
            <summary>StateManager is used for is used for state management (loading, storing).</summary>
        </member>
        <member name="M:SevenEngine.StateManager.Update(System.Single)">
            <summary>Calls the "Update()" function for the current state relative to the timespan since the last update in SECONDS.</summary>
            <param name="elapsedTime">The time since the last update call in SECONDS.</param>
        </member>
        <member name="M:SevenEngine.StateManager.Render">
            <summary>Calls the render function of the current state.</summary>
        </member>
        <member name="M:SevenEngine.StateManager.GetState(System.String)">
            <summary>Gets a reference to a state.</summary>
            <param name="stateId">The name associated with that desired state.</param>
            <returns>The desired state.</returns>
        </member>
        <member name="M:SevenEngine.StateManager.TryGet(System.String,SevenEngine.IGameState@)">
            <summary>Tries to get a desired state, but returns a bool rather than crashing.</summary>
            <param name="stateId">The name of the state to get.</param>
            <param name="state">The reference to the state.</param>
            <returns>Whether or not it could get the value.</returns>
        </member>
        <member name="M:SevenEngine.StateManager.AddState(SevenEngine.IGameState)">
            <summary>Adds a game state to the game</summary>
            <param name="stateId">What you want this state to be called so that you can access it.</param>
            <param name="state">The reference to the game state object to be added.</param>
        </member>
        <member name="M:SevenEngine.StateManager.TriggerStateLoad(System.String)">
            <summary>Triggers the load method of a state.</summary>
            <param name="stateId">The name of the state to trigger the Load.</param>
        </member>
        <member name="M:SevenEngine.StateManager.ChangeState(System.String)">
            <summary>Select the current state to be updated and rendered.</summary>
            <param name="stateId">The name associated with the state (what you caled it when you added it).</param>
        </member>
        <member name="M:SevenEngine.StateManager.StateExists(System.String)">
            <summary>Checks if a state exists (an example could be if a specific menu is already loaded then use it; if not then it needs to be loaded first).</summary>
            <param name="stateId">The name associated with the state (what you caled it when you added it).</param>
            <returns>"true if the state exists. "false""</returns>
        </member>
        <member name="T:SevenEngine.StateManager.StateSystemException">
            <summary>A unique class for throwing StateSystem exceptions only.</summary>
        </member>
        <member name="T:SevenEngine.Texts.Text">
            <summary>Represents a message to be rendered, along with its font, color, and transformational attributes.</summary>
        </member>
        <member name="T:SevenEngine.Imaging.Texture">
            <summary>Represents a single image that has been loaded on the GPU.</summary>
        </member>
        <member name="M:SevenEngine.Imaging.Texture.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Constructs an instance of a texture, which is a GPU mapping class.</summary>
            <param name="id">The id associated with this texture used for look-up purposes.</param>
            <param name="gpuHandle">The GPU handle or location for the start of memory on VRAM.</param>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
        </member>
        <member name="P:SevenEngine.Imaging.Texture.ExistingReferences">
            <summary>The number of existing hardware instances of this model reference.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Texture.Id">
            <summary>The string id associated with this specific texture when it was loaded.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Texture.GpuHandle">
            <summary>The handle of the texture on the GPU.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Texture.Width">
            <summary>The width of the texture.</summary>
        </member>
        <member name="P:SevenEngine.Imaging.Texture.Height">
            <summary>The height of the texture.</summary>
        </member>
        <member name="T:SevenEngine.TextureManager">
            <summary>TextureManager is used for image management (loading, storing, hardware instance controling, and disposing).</summary>
        </member>
        <member name="M:SevenEngine.TextureManager.TextureExists(System.String)">
            <summary>Checks to see if a texture id exists.</summary>
            <param name="textureId">The id to check for existance.</param>
            <returns>True if the texture is exists, false if it does not.</returns>
        </member>
        <member name="M:SevenEngine.TextureManager.Get(System.String)">
            <summary>Pulls out a reference to a texture and increments the hardware instancing tracker.</summary>
            <param name="textureId">The name associated with the texture (what you caled it when you added it).</param>
            <returns>A reference to the desired texture.</returns>
        </member>
        <member name="M:SevenEngine.TextureManager.LoadTexture(System.String,System.String)">
            <summary>Loads a texture file ontot the GPU.</summary>
            <param name="textureId">The id used to look up this texture in the future.</param>
            <param name="path">The file path of the texture file to load.</param>
        </member>
        <member name="P:SevenEngine.TextureManager.Count">
            <summary>The number of textures currently loaded onto the graphics card.</summary>
        </member>
        <member name="T:SevenEngine.Mathematics.Vector">
            <summary>Implements a 3-component (x, y, z) vector.</summary>
        </member>
        <member name="M:SevenEngine.Mathematics.Vector.RotateBy(System.Single,System.Single,System.Single,System.Single)">
            <summary>Rotates this vector by quaternion values.</summary>
            <param name="angle">The angle of rotation in radians.</param>
            <param name="x">The "x" value of the axis of rotation.</param>
            <param name="y">The "y" value of the axis of rotation.</param>
            <param name="z">The "z" value of the axis of rotation.</param>
        </member>
        <member name="T:SevenEngine.Mathematics.Vector.VectorException">
            <summary>This is used for throwing vector exceptions only to make debugging faster.</summary>
        </member>
    </members>
</doc>
